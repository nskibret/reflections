
When would you want to use a remote repository rather than keeping all your work local?

When the work requires collaboration with other people. 

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

When we pull manually, we choose the branches to that we want. It gives us flexibility in terms of what to pull and what not. 

Describe the differences between forks, clones, and branches. When would you use one instead of another?

clone is used to copy repos from git hub to local machine or from local machine to another local machine
Forks is basically the same as clone but used to copy repos from git hub to git hub (instead of cloning first a repo from a different user and pushing it back to our git hub account, git hub provides the fork mechanisms to copy the repos directly to our account). That way we avoid the extra work of first cloning it and then pushing it git hub. 

A branch contains commits. Branches are created to allow working on different versions of the same project. This comes in handy when we want to implement a new feature to our current project but we don't want to do it on the main project so we make a copy by creating a branch. Whatever modification or addition is made on the new branch is invisible to the main branch unless we merge it. This way we make sure that we mentain a working main branch while at the same time adding a new feature which we might ultimately merge it to the main branch. Both cloned repos and forked repos can have multiple branches.   

What is the benefit of having a copy of the last known state of the remote stored locally?

That way git can tell whether our local copy has been updated and inform us to push the changes to the remote. Another benefit is when change is made at the local and remote and we make a pull. Git first fetchs the changes from the remote and attach it to the branch identified by the last known state of the remote and then perform merge with the local update. In general, the last state information of the remote allows git to create a branch that allows us to track the changes being made at the local and the remote copy. 


How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

By dividing work among the collaborators and working on each parts separately before bringing all the parts together and merge it. This may bring a lot of issues. First, independently implemented works can be hard to integrate because the parts where made without a clear picture of how they fit into the bigger project. 

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

I want to make changes in a separate branch rather than directly in master in situations where I am trying to include a different feature or optimize certain part of the main branch and do all these without affecting the main branch. By creating a new branch and testing the new feature or optimization on the branch I make sure that the main branch remains to be used safely until I have a working new feature or optimization that I can safely merge into the main branch. In addition, I can pull request to ask my collaborates to check out the new feature I added and get feedback on it. 
